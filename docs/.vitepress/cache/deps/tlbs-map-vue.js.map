{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/tlbs-map-vue@1.3.1_vue@3.4.8/node_modules/tlbs-map-vue/dist/v3/index.es.js"],
  "sourcesContent": ["var _ = Object.defineProperty;\nvar k = (e, a, n) => a in e ? _(e, a, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[a] = n;\nvar M = (e, a, n) => (k(e, typeof a != \"symbol\" ? a + \"\" : a, n), n);\nimport { onUnmounted as c, defineComponent as d, ref as w, onMounted as x, nextTick as $, watch as i, provide as z, h as G, inject as m, toRaw as f } from \"vue\";\nvar Z = !1;\nfunction O(e, a) {\n  const n = {};\n  Object.keys(a.attrs).forEach((t) => {\n    if (t.indexOf(\"on\") === 0) {\n      const l = B(t.slice(2));\n      n[l] = (...r) => a.emit(l, ...r);\n    }\n  }), Object.keys(n).forEach((t) => {\n    e.on(t, n[t]);\n  }), c(() => {\n    Object.keys(n).forEach((t) => {\n      e.off(t, n[t]);\n    });\n  });\n}\nfunction B(e) {\n  return !e || e.length === 0 ? e : e.charAt(0).toLowerCase() + e.slice(1);\n}\nconst y = \"Tlbs\", L = {\n  // 腾讯位置服务开发Key\n  apiKey: {\n    type: String,\n    default: \"\"\n  },\n  // 地图附加库\n  libraries: {\n    type: String,\n    default: \"visualization,geometry,vector,tools\"\n  },\n  // 地图中心点经纬度\n  center: {\n    type: Object,\n    default: () => ({ lat: 40.040452, lng: 116.273486 })\n  },\n  // 地图缩级别\n  zoom: {\n    type: Number,\n    default: 17\n  },\n  // 地图最小缩放级别\n  minZoom: {\n    type: Number,\n    default: 3\n  },\n  // 地图最大缩放级别\n  maxZoom: {\n    type: Number,\n    default: 20\n  },\n  // 地图控件配置\n  control: {\n    type: Object,\n    default: () => ({ zoom: !0, scale: !0, rotation: !0 })\n  },\n  // 除了上述属性其他初始化属性\n  options: {\n    type: Object,\n    default: () => ({})\n  }\n};\nL.class = {\n  type: String,\n  default: \"\"\n}, L.style = {\n  type: Object,\n  default: () => ({})\n};\nconst F = d({\n  name: `${y}Map`,\n  inheritAttrs: Z,\n  props: L,\n  emits: [\"map_inited\"],\n  setup(e, a) {\n    const n = w(null), t = w(null);\n    let l;\n    return x(async () => {\n      e.apiKey && await H(e.apiKey, e.libraries), n.value && (l = new TMap.Map(n.value, {\n        ...e.options,\n        center: new TMap.LatLng(e.center.lat, e.center.lng),\n        zoom: e.zoom,\n        minZoom: e.minZoom,\n        maxZoom: e.maxZoom\n      }), t.value = l, $(() => {\n        a.emit(\"map_inited\", l);\n      }), O(l, a), Object.keys(e.control).forEach((r) => {\n        let u;\n        switch (r) {\n          case \"rotation\":\n            u = TMap.constants.DEFAULT_CONTROL_ID.ROTATION;\n            break;\n          case \"scale\":\n            u = TMap.constants.DEFAULT_CONTROL_ID.SCALE;\n            break;\n          case \"zoom\":\n            u = TMap.constants.DEFAULT_CONTROL_ID.ZOOM;\n            break;\n        }\n        if (!e.control[r]) {\n          l.removeControl(u);\n          return;\n        }\n        if (typeof e.control[r] == \"object\") {\n          const o = l.getControl(u), { position: T, className: s, numVisible: g } = e.control[r], h = {\n            topLeft: TMap.constants.CONTROL_POSITION.TOP_LEFT,\n            topCenter: TMap.constants.CONTROL_POSITION.TOP_CENTER,\n            topRight: TMap.constants.CONTROL_POSITION.TOP_RIGHT,\n            centerLeft: TMap.constants.CONTROL_POSITION.CENTER_LEFT,\n            center: TMap.constants.CONTROL_POSITION.CENTER,\n            centerRight: TMap.constants.CONTROL_POSITION.CENTER_RIGHT,\n            bottomLeft: TMap.constants.CONTROL_POSITION.BOTTOM_LEFT,\n            bottomCenter: TMap.constants.CONTROL_POSITION.BOTTOM_CENTER,\n            bottomRight: TMap.constants.CONTROL_POSITION.BOTTOM_RIGHT\n          };\n          h[T] && o.setPosition(h[T]), s && o.setClassName(s), g && o.setNumVisible(g);\n        }\n      }));\n    }), c(() => {\n      l && l.destroy();\n    }), i(\n      () => e.center,\n      (r) => {\n        l && l.setCenter(r);\n      }\n    ), i(\n      () => e.zoom,\n      (r) => {\n        l && l.setZoom(r);\n      }\n    ), z(\"map\", t), {\n      map: t,\n      ele: n\n    };\n  },\n  render() {\n    const e = {\n      ref: \"ele\",\n      // @ts-ignore\n      class: this.class,\n      // @ts-ignore\n      style: this.style\n    };\n    return G(\n      \"div\",\n      e,\n      // eslint-disable-next-line no-nested-ternary\n      // @ts-ignore\n      this.$slots.default && this.map ? this.$slots.default() : []\n    );\n  }\n}), j = [];\nlet p;\nfunction H(e, a) {\n  return new Promise((n) => {\n    if (window.TMap) {\n      n();\n      return;\n    }\n    if (j.push(n), window.initGLMap || (window.initGLMap = () => {\n      j.forEach((t) => {\n        t();\n      });\n    }), !p) {\n      p = document.createElement(\"script\");\n      const t = a ? `https://map.qq.com/api/gljs?v=1.exp&key=${e}&libraries=${a}&callback=initGLMap` : `https://map.qq.com/api/gljs?v=1.exp&key=${e}&callback=initGLMap`;\n      p.type = \"text/javascript\", p.src = t, document.body.appendChild(p);\n    }\n  });\n}\nfunction b(e) {\n  return e.map((a) => ({\n    ...a,\n    position: new TMap.LatLng(a.position.lat, a.position.lng)\n  }));\n}\nconst W = d({\n  name: `${y}MultiMarker`,\n  props: {\n    // 图层id\n    id: {\n      type: String,\n      default: \"multiMarker\"\n    },\n    // 点标注的相关样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    // 点标注数据数组\n    geometries: {\n      type: Array,\n      required: !0\n    },\n    // 其他初始化配置\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.MultiMarker({\n      ...e.options,\n      id: e.id,\n      map: f(n.value),\n      styles: A(e.styles),\n      geometries: b(e.geometries)\n    });\n    return O(t, a), c(() => {\n      t.setMap(null);\n    }), i(\n      () => e.styles,\n      (l) => {\n        t.setStyles(A(l));\n      }\n    ), i(\n      () => e.geometries,\n      (l) => {\n        t.setGeometries(b(l));\n      }\n    ), {\n      marker: t\n    };\n  },\n  render() {\n    return null;\n  }\n});\nfunction A(e) {\n  const a = {};\n  return Object.keys(e).forEach((n) => {\n    a[n] = new TMap.MarkerStyle(e[n]);\n  }), a;\n}\nconst U = d({\n  name: `${y}MarkerCluster`,\n  props: {\n    id: {\n      type: String,\n      default: \"markerCluster\"\n    },\n    geometries: {\n      type: Array,\n      required: !0\n    },\n    gridSize: {\n      type: Number,\n      default: 60\n    },\n    maxZoom: {\n      type: Number,\n      default: 13\n    },\n    minimumClusterSize: {\n      type: Number,\n      default: 2\n    },\n    zoomOnClick: {\n      type: Boolean,\n      default: !0\n    },\n    averageCenter: {\n      type: Boolean,\n      default: !1\n    },\n    enableDefaultStyle: {\n      type: Boolean,\n      default: !0\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"clusterchange\"],\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.MarkerCluster({\n      ...e.options,\n      id: e.id,\n      // 图层id\n      map: f(n.value),\n      // 设置点聚合显示在哪个map对象中（创建map的段落省略）\n      enableDefaultStyle: e.enableDefaultStyle,\n      // 使用默认样式\n      minimumClusterSize: e.minimumClusterSize,\n      // 最小聚合点数：2个\n      geometries: b(e.geometries),\n      zoomOnClick: e.zoomOnClick,\n      // 点击聚合数字放大展开\n      gridSize: e.gridSize,\n      // 聚合算法的可聚合距离，即距离小于该值的点会聚合至一起，默认为60，以像素为单位\n      averageCenter: e.averageCenter,\n      // 每个聚和簇的中心是否应该是聚类中所有标记的平均值\n      maxZoom: e.maxZoom\n      // 采用聚合策略的最大缩放级别，若地图缩放级别大于该值，则不进行聚合，标点将全部被展开\n    });\n    let l = [], r = [];\n    return t.on(\"cluster_changed\", () => {\n      l = [], r = [];\n      const u = t.getClusters();\n      let o = [];\n      u.forEach((s) => {\n        s.geometries.length > 1 && o.indexOf(s.geometries.length) === -1 && o.push(s.geometries.length);\n      }), o = o.sort((s, g) => s - g);\n      const T = n.value.getZoom();\n      u.forEach((s) => {\n        const g = s.geometries.length;\n        if (T >= e.maxZoom)\n          r.push({\n            center: s.center,\n            data: s\n          });\n        else if (s.geometries.length > 1) {\n          const h = o.indexOf(g), I = `${30 + h * 0.5 + String(g).length * 8}px`;\n          l.push({\n            center: s.center,\n            width: I,\n            height: I,\n            \"line-height\": I,\n            content: g,\n            sort: h,\n            data: s\n          });\n        } else\n          r.push({\n            center: s.center,\n            data: s\n          });\n      }), a.emit(\"clusterchange\", r, l);\n    }), O(t, a), c(() => {\n      t.setMap(null);\n    }), i(\n      () => e.geometries,\n      (u) => {\n        t.setGeometries(b(u));\n      }\n    ), {\n      aggregationPoints: l,\n      scatteredPoints: r,\n      markerCluster: t\n    };\n  },\n  render() {\n    return null;\n  }\n}), K = (e) => {\n  const a = (n) => Array.isArray(n) ? n.map((t) => a(t)) : new TMap.LatLng(n.lat, n.lng);\n  return e.map((n) => a(n));\n}, C = (e) => e.map((a) => ({\n  ...a,\n  paths: K(a.paths)\n})), V = d({\n  name: `${y}MultiPolygon`,\n  props: {\n    // 图层id\n    id: {\n      type: String,\n      default: \"multiPolygon\"\n    },\n    // 多边形的相关样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    // 多边形数据数组\n    geometries: {\n      type: Array,\n      required: !0\n    },\n    // 其他初始化配置\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.MultiPolygon({\n      ...e.options,\n      id: e.id,\n      map: f(n.value),\n      styles: S(e.styles),\n      geometries: C(e.geometries)\n    });\n    return O(t, a), c(() => {\n      t.setMap(null);\n    }), i(\n      () => e.styles,\n      (l) => {\n        t.setStyles(S(l));\n      }\n    ), i(\n      () => e.geometries,\n      (l) => {\n        t.setGeometries(C(l));\n      }\n    ), {\n      polygon: t\n    };\n  },\n  render() {\n    return null;\n  }\n});\nfunction S(e) {\n  const a = {};\n  return Object.keys(e).forEach((n) => {\n    \"extrudeHeight\" in e[n] ? a[n] = new TMap.ExtrudablePolygonStyle(e[n]) : a[n] = new TMap.PolygonStyle(e[n]);\n  }), a;\n}\nconst E = (e) => {\n  const a = (n) => Array.isArray(n) ? n.map((t) => a(t)) : new TMap.LatLng(n.lat, n.lng);\n  return e.map((n) => a(n));\n}, P = (e) => e.map((a) => a.rainbowPaths ? {\n  ...a,\n  rainbowPaths: a.rainbowPaths.map((n) => ({\n    ...n,\n    path: E(n.path)\n  }))\n} : {\n  ...a,\n  paths: E(a.paths)\n  // 坐标转换\n}), X = d({\n  name: `${y}MultiPolyline`,\n  props: {\n    // 图层id\n    id: {\n      type: String,\n      default: \"multiPolyline\"\n    },\n    // 折线的相关样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    // 折线数据数组\n    geometries: {\n      type: Array,\n      required: !0\n    },\n    // 其他初始化配置\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.MultiPolyline({\n      ...e.options,\n      id: e.id,\n      map: f(n.value),\n      styles: R(e.styles),\n      geometries: P(e.geometries)\n    });\n    return O(t, a), c(() => {\n      t.setMap(null);\n    }), i(\n      () => e.styles,\n      (l) => {\n        t.setStyles(R(l));\n      }\n    ), i(\n      () => e.geometries,\n      (l) => {\n        t.setGeometries(P(l));\n      }\n    ), {\n      polyline: t\n    };\n  },\n  render() {\n    return null;\n  }\n});\nfunction R(e) {\n  const a = {};\n  return Object.keys(e).forEach((n) => {\n    a[n] = new TMap.PolylineStyle(e[n]);\n  }), a;\n}\nconst Y = d({\n  name: `${y}MultiCircle`,\n  props: {\n    // 图层id\n    id: {\n      type: String,\n      default: \"multiCircle\"\n    },\n    // 圆的相关样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    // 圆数据数组\n    geometries: {\n      type: Array,\n      required: !0\n    },\n    // 其他初始化配置\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.MultiCircle({\n      ...e.options,\n      id: e.id,\n      map: f(n.value),\n      styles: v(e.styles),\n      geometries: N(e.geometries)\n    });\n    return O(t, a), c(() => {\n      t.setMap(null);\n    }), i(\n      () => e.styles,\n      (l) => {\n        t.setStyles(v(l));\n      }\n    ), i(\n      () => e.geometries,\n      (l) => {\n        t.setGeometries(N(l));\n      }\n    ), {\n      circle: t\n    };\n  },\n  render() {\n    return null;\n  }\n});\nfunction v(e) {\n  const a = {};\n  return Object.keys(e).forEach((n) => {\n    a[n] = new TMap.CircleStyle(e[n]);\n  }), a;\n}\nfunction N(e) {\n  return e.map((a) => ({\n    ...a,\n    center: new TMap.LatLng(a.center.lat, a.center.lng)\n  }));\n}\nconst J = d({\n  name: `${y}MultiLabel`,\n  props: {\n    // 图层id\n    id: {\n      type: String,\n      default: \"multiLabel\"\n    },\n    // 文本标注的相关样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    // 文本标注数据数组\n    geometries: {\n      type: Array,\n      required: !0\n    },\n    // 其他初始化配置\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.MultiLabel({\n      ...e.options,\n      id: e.id,\n      map: f(n.value),\n      styles: D(e.styles),\n      geometries: q(e.geometries)\n    });\n    return O(t, a), c(() => {\n      t.setMap(null);\n    }), i(\n      () => e.styles,\n      (l) => {\n        t.setStyles(D(l));\n      }\n    ), i(\n      () => e.geometries,\n      (l) => {\n        t.setGeometries(q(l));\n      }\n    ), {\n      label: t\n    };\n  },\n  render() {\n    return null;\n  }\n});\nfunction D(e) {\n  const a = {};\n  return Object.keys(e).forEach((n) => {\n    a[n] = new TMap.LabelStyle(e[n]);\n  }), a;\n}\nfunction q(e) {\n  return e.map((a) => ({\n    ...a,\n    position: new TMap.LatLng(a.position.lat, a.position.lng)\n  }));\n}\nconst Q = d({\n  name: `${y}DomOverlay`,\n  props: {\n    // DOM覆盖物经纬度位置\n    position: {\n      type: Object,\n      required: !0\n    },\n    // DOM覆盖物相对中心点偏移量\n    offset: {\n      type: Object,\n      required: !1,\n      default: () => ({ x: 0, y: 0 })\n    },\n    // 额外参数支持事件是否冒泡\n    options: {\n      type: Object,\n      default: () => ({\n        enableBubble: !0\n      })\n    },\n    width: {\n      type: Number,\n      required: !1\n    },\n    height: {\n      type: Number,\n      required: !1\n    }\n  },\n  setup(e) {\n    const a = m(\"map\");\n    if (!a)\n      return;\n    const n = w(null);\n    class t extends TMap.DOMOverlay {\n      constructor(o) {\n        super(o);\n        M(this, \"map\");\n        M(this, \"position\", null);\n        M(this, \"offset\", null);\n        this.map = o.map, this.onInit(o);\n      }\n      // 初始化DOMOverlay\n      onInit(o) {\n        this.position = o.position, this.offset = o.offset, this.dom = o.dom, this.dom.style.position = \"absolute\";\n      }\n      // 创建DOM\n      createDOM() {\n        return this.dom;\n      }\n      // 缩放地图或者移动地图触发\n      updateDOM() {\n        $(() => {\n          if (this.map && this.position && this.offset) {\n            const o = this.map.projectToContainer(new TMap.LatLng(this.position.lat, this.position.lng)), T = e.width || this.dom.clientWidth, s = e.height || this.dom.clientHeight, g = `${o.getX() - T / 2 + this.offset.x}px`, h = `${o.getY() - s / 2 + this.offset.y}px`;\n            this.dom.style.left = g, this.dom.style.top = h;\n          }\n        });\n      }\n      // 更新DOM位置\n      updatePosition() {\n        l.position = e.position, l.offset = e.offset, this.updateDOM();\n      }\n      // 销毁DOMOverlay实例\n      onDestroy() {\n        this.setMap(null);\n      }\n    }\n    let l;\n    return x(() => {\n      n.value && (l = new t({\n        ...e.options,\n        position: e.position,\n        offset: e.offset,\n        map: f(a.value),\n        dom: n.value\n      }), e.options.enableBubble || (n.value.addEventListener(\"click\", (r) => r.stopPropagation()), n.value.addEventListener(\"dblclick\", (r) => r.stopPropagation()), n.value.addEventListener(\"mousemove\", (r) => r.stopPropagation())));\n    }), c(() => {\n      l.onDestroy();\n    }), i(() => [e.position, e.offset], () => {\n      l.updatePosition();\n    }), {\n      dom: n\n    };\n  },\n  render() {\n    return G(\n      \"div\",\n      { ref: \"dom\" },\n      this.$slots.default ? this.$slots.default() : []\n    );\n  }\n}), ee = d({\n  name: `${y}Heat`,\n  props: {\n    // 热力数据\n    data: {\n      type: Array,\n      required: !0\n    },\n    // 最大辐射半径\n    radius: {\n      type: Number,\n      default: 50\n    },\n    // 峰值高度\n    height: {\n      type: Number,\n      default: 100\n    },\n    // 全局透明度\n    opacity: {\n      type: Number,\n      default: 0.8\n    },\n    // 热力最弱阈值\n    min: {\n      type: Number,\n      default: 0\n    },\n    // 热力最强阈值\n    max: {\n      type: Number,\n      required: !1\n    },\n    // 渐变颜色\n    gradientColor: {\n      type: Object,\n      required: !1\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e) {\n    const a = m(\"map\");\n    if (!a)\n      return;\n    const n = new TMap.visualization.Heat({\n      ...e.options,\n      radius: e.radius,\n      height: e.height,\n      opacity: e.opacity,\n      min: e.min,\n      max: e.max\n    });\n    return n.addTo(f(a.value)), e.gradientColor && n.setGradientColor(new TMap.GradientColor(e.gradientColor)), e.max && n.setMax(e.max), n.setData(e.data), c(() => {\n      n.remove(), n.destroy();\n    }), i(() => e.gradientColor, (t) => {\n      t && n.setGradientColor(new TMap.GradientColor(t));\n    }), i(() => e.data, (t) => {\n      n.setData(t);\n    }), i(() => e.radius, (t) => {\n      n.setRadius(t);\n    }), i(() => e.height, (t) => {\n      n.setHeight(t);\n    }), i(() => e.opacity, (t) => {\n      n.setOpacity(t);\n    }), i(() => e.min, (t) => {\n      n.setMin(t);\n    }), i(() => e.max, (t) => {\n      t && n.setMax(t);\n    }), {\n      heat: n\n    };\n  },\n  render() {\n    return null;\n  }\n}), te = {\n  circleId: {\n    type: String,\n    default: \"circle\"\n  },\n  defaultCircleGeometries: {\n    type: Array\n  },\n  circleStyles: {\n    type: Object\n  },\n  circleDrawingStyleId: {\n    type: String,\n    default: \"default\"\n  },\n  circleSelectedStyleId: {\n    type: String,\n    default: \"default\"\n  },\n  polygonId: {\n    type: String,\n    default: \"polygon\"\n  },\n  defaultPolygonGeometries: {\n    type: Array\n  },\n  polygonStyles: {\n    type: Object\n  },\n  polygonDrawingStyleId: {\n    type: String,\n    default: \"default\"\n  },\n  polygonSelectedStyleId: {\n    type: String,\n    default: \"default\"\n  },\n  activeOverlayId: {\n    type: String,\n    default: \"polygon\"\n  },\n  actionMode: {\n    type: String,\n    default: \"draw\"\n  },\n  snappable: {\n    type: Boolean,\n    default: !1\n  },\n  selectable: {\n    type: Boolean,\n    default: !0\n  },\n  options: {\n    type: Object,\n    default: () => ({})\n  }\n}, ne = d({\n  name: `${y}GeometryEditor`,\n  props: te,\n  emits: [\"select\", \"update:activeOverlayId\"],\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = f(n.value), l = new TMap.MultiCircle({\n      id: e.circleId,\n      map: t,\n      styles: e.circleStyles ? v(e.circleStyles) : {},\n      geometries: e.defaultCircleGeometries ? N(e.defaultCircleGeometries) : []\n    }), r = new TMap.MultiPolygon({\n      id: e.polygonId,\n      map: t,\n      styles: e.polygonStyles ? S(e.polygonStyles) : {},\n      geometries: e.defaultPolygonGeometries ? C(e.defaultPolygonGeometries) : []\n    });\n    l.on(\"click\", (o) => {\n      e.actionMode !== \"draw\" && (a.emit(\"select\", o.geometry), a.emit(\"update:activeOverlayId\", e.circleId));\n    }), r.on(\"click\", (o) => {\n      e.actionMode !== \"draw\" && (a.emit(\"select\", o.geometry), a.emit(\"update:activeOverlayId\", e.polygonId));\n    });\n    const u = new TMap.tools.GeometryEditor({\n      ...e.options,\n      map: t,\n      // 编辑器绑定的地图对象\n      overlayList: [\n        // 可编辑图层\n        {\n          overlay: r,\n          id: e.polygonId,\n          selectedStyleId: e.polygonSelectedStyleId,\n          drawingStyleId: e.polygonDrawingStyleId\n        },\n        {\n          overlay: l,\n          id: e.circleId,\n          selectedStyleId: e.circleSelectedStyleId,\n          drawingStyleId: e.circleDrawingStyleId\n        }\n      ],\n      actionMode: e.actionMode === \"draw\" ? TMap.tools.constants.EDITOR_ACTION.DRAW : TMap.tools.constants.EDITOR_ACTION.INTERACT,\n      // 编辑器的工作模式\n      activeOverlayId: e.activeOverlayId,\n      // 激活图层\n      selectable: e.selectable,\n      // 开启点选功能\n      snappable: e.snappable\n      // 开启吸附\n    });\n    return O(u, a), c(() => {\n      l.setMap(null), r.setMap(null);\n      try {\n        u.setMap(null);\n      } catch (o) {\n        console.error(o);\n      }\n    }), i(\n      () => e.circleStyles,\n      (o) => {\n        o && l.setStyles(v(o));\n      }\n    ), i(\n      () => e.polygonStyles,\n      (o) => {\n        o && r.setStyles(S(o));\n      }\n    ), i(() => e.activeOverlayId, (o) => o && u.setActiveOverlay(o)), i(() => e.actionMode, (o) => o && u.setActionMode(o === \"draw\" ? TMap.tools.constants.EDITOR_ACTION.DRAW : TMap.tools.constants.EDITOR_ACTION.INTERACT)), {\n      circle: l,\n      polygon: r,\n      editor: u\n    };\n  },\n  render() {\n    return null;\n  }\n}), ae = d({\n  name: `${y}Arc`,\n  props: {\n    // 弧线数据\n    data: {\n      type: Array,\n      required: !0\n    },\n    // 弧线图样式映射函数，接收ArcLine数据返回对应样式，样式对象规范详见TMap.visualization.ArcStyle\n    pickStyle: {\n      type: Function,\n      require: !1\n    },\n    // 弧线模式，horizontal 代表贴地的弧线，vertical 代表弧线所在平面会垂直于底图平面，默认为vertical。\n    mode: {\n      type: String,\n      default: \"vertical\"\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e) {\n    const a = m(\"map\");\n    if (!a)\n      return;\n    const n = new TMap.visualization.Arc({\n      ...e.options,\n      mode: e.mode\n    });\n    return n.addTo(f(a.value)), e.pickStyle && n.setPickStyle(e.pickStyle), n.setData(e.data), c(() => {\n      n.remove(), n.destroy();\n    }), i(() => e.pickStyle, (t) => {\n      t && n.setPickStyle(t);\n    }), i(() => e.data, (t) => {\n      n.setData(t);\n    }), i(() => e.mode, (t) => {\n      n.setMode(t);\n    }), {\n      arc: n\n    };\n  },\n  render() {\n    return null;\n  }\n}), le = d({\n  name: `${y}Grid`,\n  props: {\n    // 网格数据\n    data: {\n      type: Array,\n      required: !0\n    },\n    sideLength: {\n      type: Number,\n      required: !1,\n      default: 1e3\n    },\n    extrudable: {\n      type: Boolean,\n      required: !1,\n      default: !0\n    },\n    colorList: {\n      type: Array,\n      required: !1,\n      default: () => [\"#D8AFA7\", \"#842610\", \"#641200\"]\n    },\n    heightRange: {\n      type: Array,\n      required: !1,\n      default: () => [1, 100]\n    },\n    showRange: {\n      type: Array,\n      required: !1,\n      default: () => []\n    },\n    options: {\n      type: Object,\n      required: !1,\n      default: () => ({})\n    },\n    selectOptions: {\n      type: Object,\n      required: !1,\n      default: null\n    }\n  },\n  setup(e) {\n    const a = m(\"map\");\n    if (!a)\n      return;\n    const n = new TMap.visualization.Grid({\n      ...e.options,\n      sideLength: e.sideLength,\n      // 设置网格边长\n      extrudable: e.extrudable,\n      // 网格是否可拔起\n      colorList: e.colorList,\n      // 颜色层级\n      heightRange: e.heightRange,\n      // 高度变化区间\n      showRange: e.showRange\n      // 聚合数据显示区间\n    });\n    return n.addTo(f(a.value)), n.setData(e.data), e.selectOptions && n.setSelectOptions(e.selectOptions), c(() => {\n      n.remove(), n.destroy();\n    }), i(() => e.showRange, (t) => {\n      n.setShowRange(t);\n    }), i(() => e.sideLength, (t) => {\n      n.setSideLength(t);\n    }), i(() => e.extrudable, (t) => {\n      n.setExtrudable(t);\n    }), i(() => e.colorList, (t) => {\n      n.setColorList(t);\n    }), i(() => e.heightRange, (t) => {\n      n.setHeightRange(t);\n    }), i(() => e.data, (t) => {\n      n.setData(t);\n    }), i(() => e.options.zIndex, (t) => {\n      t !== void 0 && n.setZIndex(t);\n    }), i(() => e.options.minZoom, (t) => {\n      t && n.setMinZoom(t);\n    }), i(() => e.options.maxZoom, (t) => {\n      t && n.setMaxZoom(t);\n    }), {\n      grid: n\n    };\n  },\n  render() {\n    return null;\n  }\n}), ie = d({\n  name: `${y}Area`,\n  props: {\n    // 数据\n    data: {\n      type: Array,\n      required: !0\n    },\n    // 样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    selectOptions: {\n      type: Object,\n      required: !1,\n      default: () => null\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e) {\n    const a = m(\"map\");\n    if (!a)\n      return;\n    const n = new TMap.visualization.Area({\n      ...e.options,\n      styles: e.styles\n      // 设置网格边长\n    });\n    return e.selectOptions && n.setSelectOptions(e.selectOptions), n.setData(e.data), n.addTo(f(a.value)), c(() => {\n      n.remove(), n.destroy();\n    }), i(() => e.styles, (t) => {\n      n.setStyles(t);\n    }), i(() => e.data, (t) => {\n      n.setData(t);\n    }), i(() => e.selectOptions, (t) => {\n      t && n.setSelectOptions(t);\n    }), i(() => e.options.zIndex, (t) => {\n      t !== void 0 && n.setZIndex(t);\n    }), i(() => e.options.minZoom, (t) => {\n      t && n.setMinZoom(t);\n    }), i(() => e.options.maxZoom, (t) => {\n      t && n.setMaxZoom(t);\n    }), {\n      area: n\n    };\n  },\n  render() {\n    return null;\n  }\n}), oe = d({\n  name: `${y}InfoWindow`,\n  props: {\n    visible: {\n      type: Boolean,\n      default: !0\n    },\n    position: {\n      type: Object,\n      required: !0\n    },\n    content: {\n      type: String,\n      required: !0\n    },\n    // 其他初始化配置\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.InfoWindow({\n      ...e.options,\n      map: f(n.value),\n      position: new TMap.LatLng(e.position.lat, e.position.lng),\n      content: e.content\n    });\n    return e.visible ? t.open() : t.close(), O(t, a), c(() => {\n      t.destroy();\n    }), i(() => e.visible, (l) => {\n      l ? t.open() : t.close();\n    }), i(() => e.position, (l) => {\n      t.setPosition(new TMap.LatLng(l.lat, l.lng));\n    }), i(() => e.content, (l) => {\n      t.setContent(l);\n    }), {\n      infoWindow: t\n    };\n  },\n  render() {\n    return null;\n  }\n}), re = d({\n  name: `${y}Dot`,\n  props: {\n    // 散点数据\n    data: {\n      type: Array,\n      required: !0\n    },\n    // 散点样式\n    styles: {\n      type: Object,\n      required: !0\n    },\n    // 散点固定朝向\n    faceTo: {\n      type: String,\n      default: \"screen\"\n    },\n    // 拾取配置\n    selectOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    // 散点图呈现泛光效果\n    enableBloom: {\n      type: Boolean,\n      default: !1\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(e, a) {\n    const n = m(\"map\");\n    if (!n)\n      return;\n    const t = new TMap.visualization.Dot({\n      ...e.options,\n      styles: e.styles,\n      faceTo: e.faceTo,\n      enableBloom: e.enableBloom,\n      selectOptions: e.selectOptions\n    });\n    return t.addTo(f(n.value)), t.setData(e.data), O(t, a), c(() => {\n      t.remove(), t.destroy();\n    }), i(() => e.data, (l) => {\n      t.setData(l);\n    }), i(() => e.styles, (l) => {\n      t.setStyles(l);\n    }), i(() => e.faceTo, (l) => {\n      t.setFaceTo(l);\n    }), i(() => e.selectOptions, (l) => {\n      t.setSelectOptions(l);\n    }), {\n      dot: t\n    };\n  },\n  render() {\n    return null;\n  }\n}), se = [\n  F,\n  W,\n  V,\n  X,\n  Y,\n  Q,\n  J,\n  ee,\n  ne,\n  U,\n  ae,\n  le,\n  ie,\n  oe,\n  re\n], de = {\n  install(e) {\n    se.forEach((a) => e.component(a.name, a));\n  }\n};\nexport {\n  ae as Arc,\n  ie as Area,\n  F as BaseMap,\n  Q as DomOverlay,\n  re as Dot,\n  ne as GeometryEditor,\n  le as Grid,\n  ee as Heat,\n  oe as InfoWindow,\n  U as MarkerCluster,\n  Y as MultiCircle,\n  J as MultiLabel,\n  W as MultiMarker,\n  V as MultiPolygon,\n  X as MultiPolyline,\n  de as default\n};\n"],
  "mappings": "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",
  "names": ["h"]
}
